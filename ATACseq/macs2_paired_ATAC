WORKDIR=XXWORKDIRXX
SAMPLENAME=XXSAMPLENAMEXX
GENOME=XXGENOMEXX

CENTERFRAGS=true
FRAGMENTLENGTH=200

PATH=$PATH:~/src/bedtools2/bin

TREATBED=${SAMPLENAME}.bed
TREATSORTBED=${SAMPLENAME}.sort.bed
FRAGMENTSBED=${SAMPLENAME}.fragments_${FRAGMENTLENGTH}bp.bed
#BEDGRAPHFILE=${SAMPLENAME}.fragments_${FRAGMENTLENGTH}bp.bedGraph
#BIGWIGFILE=${SAMPLENAME}.fragments_${FRAGMENTLENGTH}bp.bigWig
#PEAKSBED=${SAMPLENAME}_peaks.bed
#GENOMEFILE=~/data/UCSC_Downloads/${GENOME}/chrom.sizes

cd $WORKDIR

# sort bed files (-u flag eliminates duplicate reads)
# sort -k 1,1 -k 2,2n -u $TREATBED > $TREATSORTBED
# sort -k 1,1 -k 2,2n $TREATBED > $TREATSORTBED
ln -s $TREATBED $TREATSORTBED

# call peaks with MACS and make fragments file
export PYTHONPATH=$PYTHONPATH:~/.local/lib64/python2.7/site-packages

if [ $GENOME = "hg19" ]; then

  if [ "$CENTERFRAGS" = true ]; then
    awk -v len=$FRAGMENTLENGTH 'BEGIN { OFS="\t"; while(getline < "/home/hodgeshc/data/UCSC_Downloads/hg19/chrom.sizes" > 0) chr[$1]=$2 } { if($6=="+") { start=$2-int(len/2); end=$2+int(len/2) } else { start=$3-int(len/2); end=$3+int(len/2) } if(start<0) start=0; if(end>chr[$1]) end=chr[$1]; $2=start; $3=end; print; }' $TREATSORTBED | sort -k 1,1 -k 2,2n -k 3,3n -u > $FRAGMENTSBED
  else
    awk -v len=$FRAGMENTLENGTH 'BEGIN { OFS="\t"; while(getline < "/home/hodgeshc/data/UCSC_Downloads/hg19/chrom.sizes" > 0) chr[$1]=$2 } { if($6=="+") { $3=$2+len } else { $2=$3-len }; if($2<0) $2=0; if($3>chr[$1]) $3=chr[$1]; print; }' $TREATSORTBED | sort -k 1,1 -k 2,2n -k 3,3n -u > $FRAGMENTSBED
  fi

  ~/.local/bin/macs2 callpeak --treatment $FRAGMENTSBED --format BED --name $SAMPLENAME --gsize hs --nomodel

elif [ $GENOME = "mm9" ]; then

  if [ "$CENTERFRAGS" = true ]; then
    awk -v len=$FRAGMENTLENGTH 'BEGIN { OFS="\t"; while(getline < "/home/hodgeshc/data/UCSC_Downloads/mm9/chrom.sizes" > 0) chr[$1]=$2 } { start=$2-int(len/2); end=$3+int(len/2); if(start<1) start=1; if(end>chr[$1]) end=chr[$1]; $2=start; $3=start+len; print; $2=end-len; $3=end; print; }' $TREATSORTBED | sort -k 1,1 -k 2,2n -k 3,3n -u > $FRAGMENTSBED
  else
    awk -v len=$FRAGMENTLENGTH 'BEGIN { OFS="\t"; while(getline < "/home/hodgeshc/data/UCSC_Downloads/mm9/chrom.sizes" > 0) chr[$1]=$2 } { if($6=="+") { $3=$2+len } else { $2=$3-len }; if($2<0) $2=0; if($3>chr[$1]) $3=chr[$1]; print; }' $TREATSORTBED | sort -k 1,1 -k 2,2n -k 3,3n -u > $FRAGMENTSBED
  fi

  ~/.local/bin/macs2 callpeak --treatment $FRAGMENTSBED --format BED --name $SAMPLENAME --gsize mm --nomodel

fi

ln -s ${SAMPLENAME}_peaks.narrowPeak ${SAMPLENAME}_peaks.bed

# SCALE=`bedtools intersect -sorted -a $PEAKSBED -b $FRAGMENTSBED | wc -l | awk '{ print 1e6/$1 }'`
# bedtools genomecov -scale $SCALE -bg -trackline -trackopts "name=\"$SAMPLENAME\"" -i $FRAGMENTSBED -g $GENOMEFILE > $BEDGRAPHFILE
# bedGraphToBigWig $BEDGRAPHFILE $GENOMEFILE $BIGWIGFILE
# gzip $BEDGRAPHFILE

